name: Deploy to GitHub Pages

# Lancia il workflow ad ogni push su master
on:
  push:
    branches: [ master ]
permissions:
  contents: write

jobs:
  deploy-to-github-pages:
    # Utilizza l'immagine ubuntu-latest su cui far girare gli step
    runs-on: ubuntu-latest
    steps:
    # GitHub checkout action per fare il git checkout dal branch master
    - uses: actions/checkout@v4
    
    # Installazione .NET Core SDK
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x
        
    # Aggiunta permessi utente alla cartella di progetto
    - name: Give user permissions to folder
    - run: sudo chmod -R 755 ./FRifugioBlog
    
    # Publish del progetto Blazor sulla cartella release
    - name: Publish .NET Core Project
      run: sudo dotnet publish ./FRifugioBlog/FRifugioBlog.csproj -c Release -o release --nologo
    
    #  Cambio tag base in index.html da '/' a 'blog' per riconoscere la sottocartella di GitHub Pages
    - name: Change base-tag in index.html from / to my Repository Name
      run: sed -i 's/<base href="\/" \/>/<base href="\/blog\/" \/>/g' release/wwwroot/index.html
    
    # Fix degli hash del service-worker-assets.js (creati automaticamente dalla logica della PWA)
    - name: Fix service-worker-assets.js hashes
      working-directory: release/wwwroot
      run: |
        jsFile=$(<service-worker-assets.js)
        # remove JavaScript from contents so it can be interpreted as JSON
        json=$(echo "$jsFile" | sed "s/self.assetsManifest = //g" | sed "s/;//g")
        # grab the assets JSON array
        assets=$(echo "$json" | jq '.assets[]' -c)
        for asset in $assets
        do
          oldHash=$(echo "$asset" | jq '.hash')
          #remove leading and trailing quotes
          oldHash="${oldHash:1:-1}"
          path=$(echo "$asset" | jq '.url')
          #remove leading and trailing quotes
          path="${path:1:-1}"
          newHash="sha256-$(openssl dgst -sha256 -binary $path | openssl base64 -A)"
          
          if [ $oldHash != $newHash ]; then
            # escape slashes for json
            oldHash=$(echo "$oldHash" | sed 's;/;\\/;g')
            newHash=$(echo "$newHash" | sed 's;/;\\/;g')
            echo "Updating hash for $path from $oldHash to $newHash"
            # escape slashes second time for sed
            oldHash=$(echo "$oldHash" | sed 's;/;\\/;g')
            jsFile=$(echo -n "$jsFile" | sed "s;$oldHash;$newHash;g")
          fi
        done

        echo -n "$jsFile" > service-worker-assets.js

    # File 404.html con routing di Blazor
    - name: copy index.html to 404.html
      run: cp release/wwwroot/index.html release/wwwroot/404.html

    # Aggiunta di un file .nojekyll per bypassare lo standard di GitHub Pages (Permette file e cartelle che iniziano per underscore)
    - name: Add .nojekyll file
      run: touch release/wwwroot/.nojekyll
    
    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4.5.0
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages
        FOLDER: release/wwwroot
